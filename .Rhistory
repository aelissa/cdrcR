tmp<-do.call(tmp,rbind)
tmp<-do.call(rbind,tmp)
View(tmp)
View(records)
sub(".*https://api.cdrc.ac.uk/v1/", "", tmp)
tmp<-sub(".*https://api.cdrc.ac.uk/v1/", "", tmp)
tmp<-sub("/.*", "", tmp)
tmp
tmp<-tmp[!duplicated(tmp$V1),]
class(tmp)
tmp<-as.data.frame(tmp[!duplicated(tmp$V1),])
tmp<-as.data.frame(tmp)
tmp<-tmp[!duplicated(tmp$V1),]
tmp
tmp<-purrr:::map(records[[1]][["apiEndpoints"]],unlist)
tmp<-purrr:::map(tmp,"url")
tmp<-do.call(rbind,tmp)
tmp<-sub(".*https://api.cdrc.ac.uk/v1/", "", tmp)
tmp<-sub("/.*", "", tmp)
tmp<-as.data.frame(tmp)
tmp<-tmp[!(duplicated(tmp$V1) | tmp$V1==""),]
class(tmp)
tmp<-purrr:::map(records[[1]][["apiEndpoints"]],unlist)
tmp<-purrr:::map(tmp,"url")
tmp<-do.call(rbind,tmp)
tmp<-sub(".*https://api.cdrc.ac.uk/v1/", "", tmp)
tmp<-sub("/.*", "", tmp)
tmp<-as.data.frame(tmp)
tmp<-paste(tmp[!(duplicated(tmp$V1) | tmp$V1==""),],sep = "",collapse = ",")
tmp<-purrr:::map(records[[1]][["apiEndpoints"]],unlist)
tmp<-purrr:::map(tmp,"url")
tmp<-do.call(rbind,tmp)
tmp<-sub(".*https://api.cdrc.ac.uk/v1/", "", tmp)
tmp<-sub("/.*", "", tmp)
tmp<-as.data.frame(tmp)
tmp<-paste(tmp[!(duplicated(tmp$V1) | tmp$V1==""),],sep = "",collapse = ", ")
datacode<-list()
for (i in 1:length(records)) {
tmp<-purrr:::map(records[[1]][["apiEndpoints"]],unlist)
tmp<-purrr:::map(tmp,"url")
tmp<-do.call(rbind,tmp)
tmp<-sub(".*https://api.cdrc.ac.uk/v1/", "", tmp)
tmp<-sub("/.*", "", tmp)
tmp<-as.data.frame(tmp)
tmp<-paste(tmp[!(duplicated(tmp$V1) | tmp$V1==""),],sep = "",collapse = ", ")
datacode[[i]]<-tmp
}
View(datacode)
datacode<-list()
for (i in 1:length(records)) {
tmp<-purrr:::map(records[[i]][["apiEndpoints"]],unlist)
tmp<-purrr:::map(tmp,"url")
tmp<-do.call(rbind,tmp)
tmp<-sub(".*https://api.cdrc.ac.uk/v1/", "", tmp)
tmp<-sub("/.*", "", tmp)
tmp<-as.data.frame(tmp)
tmp<-paste(tmp[!(duplicated(tmp$V1) | tmp$V1==""),],sep = "",collapse = ", ")
datacode[[i]]<-tmp
}
View(datacode)
datacode<-do.call(rbind,datacode)
View(datacode)
unnest_datacode<-function(records){
datacode<-list()
for (i in 1:length(records)) {
tmp<-purrr:::map(records[[i]][["apiEndpoints"]],unlist)
tmp<-purrr:::map(tmp,"url")
tmp<-do.call(rbind,tmp)
tmp<-sub(".*https://api.cdrc.ac.uk/v1/", "", tmp)
tmp<-sub("/.*", "", tmp)
tmp<-as.data.frame(tmp)
tmp<-paste(tmp[!(duplicated(tmp$V1) | tmp$V1==""),],sep = "",collapse = ", ")
datacode[[i]]<-tmp
}
datacode<-do.call(rbind,datacode)
return(datacode)
}
datacode<-unnest_datacode(records)
records<-as.data.frame(do.call(rbind,records))
geography_level<-purrr:::map(records[["granularities"]],unlist)
geography_level<-purrr:::map(geography_level,1)
records$DataCode<-datacode
records$GeographyLevel<-do.call(rbind,geography_level)
records$Title<-do.call(rbind,records$title)
records$dataSetURL<-do.call(rbind,records$dataSetURL)
records$GeographicalCoverage<-do.call(rbind,records$spatialGeographicalCoverageLocation)
records<-records[c("Title","DataCode","dataSetURL","GeographicalCoverage","GeographyLevel")]
View(records)
unnest_datacode<-function(records){
datacode<-list()
for (i in 1:length(records)) {
tmp<-purrr:::map(records[[i]][["apiEndpoints"]],unlist)
tmp<-purrr:::map(tmp,"url")
tmp<-do.call(rbind,tmp)
tmp<-sub(".*https://api.cdrc.ac.uk/v1/", "", tmp)
tmp<-sub("/.*", "", tmp)
tmp<-as.data.frame(tmp)
tmp<-paste(tmp[!(duplicated(tmp$V1) | tmp$V1=="" | tmp$V1=="https:"),],sep = "",collapse = ", ")
datacode[[i]]<-tmp
}
datacode<-do.call(rbind,datacode)
return(datacode)
}
records <- httr::GET("https://api.cdrc.ac.uk/v1/DataSetMetaData",httr::add_headers(Authorization = token))
records<-httr::content(records)
datacode<-unnest_datacode(records)
records<-as.data.frame(do.call(rbind,records))
geography_level<-purrr:::map(records[["granularities"]],unlist)
geography_level<-purrr:::map(geography_level,1)
records$DataCode<-datacode
records$GeographyLevel<-do.call(rbind,geography_level)
records$Title<-do.call(rbind,records$title)
records$dataSetURL<-do.call(rbind,records$dataSetURL)
records$GeographicalCoverage<-do.call(rbind,records$spatialGeographicalCoverageLocation)
records<-records[c("Title","DataCode","dataSetURL","GeographicalCoverage","GeographyLevel")]
View(records)
list_data<-function(){
token<-paste0("Bearer ",Sys.getenv("CDRC_API_KEY"))
records <- httr::GET("https://api.cdrc.ac.uk/v1/DataSetMetaData",httr::add_headers(Authorization = token))
if (records$status_code == 500){
message("The token is expired. Login again with CDRC_login() to generate a new one.")
}else{
records<-httr::content(records)
}
datacode<-unnest_datacode(records)
records<-as.data.frame(do.call(rbind,records))
geography_level<-purrr:::map(records[["granularities"]],unlist)
geography_level<-purrr:::map(geography_level,1)
records$DataCode<-datacode
records$GeographyLevel<-do.call(rbind,geography_level)
records$Title<-do.call(rbind,records$title)
records$dataSetURL<-do.call(rbind,records$dataSetURL)
records$GeographicalCoverage<-do.call(rbind,records$spatialGeographicalCoverageLocation)
records<-records[c("Title","DataCode","dataSetURL","GeographicalCoverage","GeographyLevel")]
return(records)
}
dataset_list <- list_data()
View(dataset_list)
imd<-get_data("AHAHOverallIndexDomain",geography = "postcode", code = c("CH430UQ","LS61EF","L83UL"), boundaries = TRUE)
datacode<-"AHAHOverallIndexDomain"
geography = "postcode"
code = c("CH430UQ","LS61EF","L83UL")
boundaries = TRUE
if(length(code)==1){
url <- paste0("https://api.cdrc.ac.uk/v1/",
datacode,
"/",
geography,
"=",
code)
single_code<-TRUE
}
token<-paste0("Bearer ",Sys.getenv("CDRC_API_KEY"))
call<-httr::GET(url,httr::add_headers(Authorization = token))
if (call$status_code == 500){
message("The token is expired. Login again with CDRC_login() to generate a new one.")
}
if(httr::http_error(call)){
print("error content")
}
data<-httr::content(call,as = "text")
data<-jsonlite::fromJSON(data)
code
length(code)
single_code<-FALSE
if(geography=="msoaCode"){
geography<-"msoaCodes"
code=paste0("msoaCodes=",code, sep="", collapse="&")
}
if(geography=="lsoaCode"){
geography<-"lsoaCodes"
code=paste0("lsoaCodes=",code, sep="", collapse="&")
}
if(geography=="postCode"){
geography<-"postCodes"
code=paste0("postCodes=",code, sep="", collapse="&")
}
if(geography=="postcode"){geography="postCode"}
if(geography=="postCode"){
geography<-"postCodes"
code=paste0("postCodes=",code, sep="", collapse="&")
}
url<-paste0("https://api.cdrc.ac.uk/v1/",
datacode,
"/",
geography,
"?",
code)
token<-paste0("Bearer ",Sys.getenv("CDRC_API_KEY"))
call<-httr::GET(url,httr::add_headers(Authorization = token))
data<-httr::content(call,as = "text")
data<-jsonlite::fromJSON(data)
if(single_code==TRUE){data<-as.data.frame(data[[2]])}
else{data<-as.data.frame(rlist::list.rbind(data[[2]]))}
else{data<-as.data.frame(rlist::list.rbind(data[[2]]))}
data<-as.data.frame(rlist::list.rbind(data[[2]]))
View(data)
data_list<-list_data()
data_list<-data_list[data_list$DataCode==datacode,]
data<-get_boundaries(data,data_list$GeographyLevel)
data_list$GeographyLevel
data_list<-list_data()
data_list<-data_list[data_list$DataCode %in% datacode,]
data_list<-data_list[data_list$DataCode %like% datacode,]
data_list<-list_data()
data_list<-data_list[data_list$DataCode %like% datacode,]
data_list<-select(dplyr::contains(datacode))
data_list<-dplyr::select(dplyr::contains(datacode))
data_list<-dplyr::filter(data_list,dplyr::contains(datacode))
data_list<-dplyr::filter(data_list, grepl(datacode, DataCode))
View(data_list)
get_data<-function(datacode,geography=c("postcode","MSOA","LSOA"),code,boundaries=FALSE){
geography <- match.arg(geography)
if(geography=="MSOA"){geography="msoaCode"}
if(geography=="LSOA"){geography="lsoaCode"}
if(geography=="postcode"){geography="postCode"}
####add error when data is not in the CDRC catalogue
####check code length
if(length(code)==1){
url <- paste0("https://api.cdrc.ac.uk/v1/",
datacode,
"/",
geography,
"=",
code)
single_code<-TRUE
}
else{
single_code<-FALSE
if(geography=="msoaCode"){
geography<-"msoaCodes"
code=paste0("msoaCodes=",code, sep="", collapse="&")
}
if(geography=="lsoaCode"){
geography<-"lsoaCodes"
code=paste0("lsoaCodes=",code, sep="", collapse="&")
}
if(geography=="postCode"){
geography<-"postCodes"
code=paste0("postCodes=",code, sep="", collapse="&")
}
url<-paste0("https://api.cdrc.ac.uk/v1/",
datacode,
"/",
geography,
"?",
code)
}
token<-paste0("Bearer ",Sys.getenv("CDRC_API_KEY"))
call<-httr::GET(url,httr::add_headers(Authorization = token))
if (call$status_code == 500){
message("The token is expired. Login again with CDRC_login() to generate a new one.")
}
if(httr::http_error(call)){
print("error content")
}
else{
data<-httr::content(call,as = "text")
data<-jsonlite::fromJSON(data)
if(single_code==TRUE){
data<-as.data.frame(data[[2]])
}
else{
data<-as.data.frame(rlist::list.rbind(data[[2]]))
}
}
if(boundaries==TRUE){
data_list<-list_data()
data_list<-dplyr::filter(data_list, grepl(datacode, DataCode))
data<-get_boundaries(data,data_list$GeographyLevel)
}
return(data)
}
get_boundaries<-function(data,geo){
codeList<-paste(data[[c(1)]],sep = "",collapse = "', '")
#clause<-paste0(toupper(colnames(data[1]))," IN ('",noquote(codeList),"')")
if(geo =="LSOA"){
ogpURL<-"https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/Lower_Layer_Super_Output_Areas_December_2011_Boundaries_EW_BFC_V2/FeatureServer/0/query?where="
geocode<-"LSOA11CD"
}
if(geo =="OA"){
ogpURL<-"https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/Output_Areas_December_2011_Boundaries_EW_BGC/FeatureServer/0/query?where="
}
if(geo =="WZ"){
ogpURL<-"https://ons-inspire.esriuk.com/arcgis/rest/services/Census_Boundaries/Workplace_Zone_December_2011_Boundaries/MapServer/0/query?where="
}
clause<-paste0(geocode," IN ('",noquote(codeList),"')")
whereClause<-urltools::url_encode(clause)
ogpURL<-paste0(ogpURL,whereClause,"&outFields=*&outSR=4326&f=json")
sf <- sf::st_read(ogpURL)
data<-sf::st_as_sf(cbind(data,sf))
return(data)
}
imd<-get_data("AHAHOverallIndexDomain",geography = "postcode", code = c("CH430UQ","LS61EF","L83UL"), boundaries = TRUE)
View(imd)
loac<-get_data("LOACInputData2011",geography = "LSOA", code = "E01000945", boundaries = TRUE)
oaclass<-get_data("OAClassification2011",geography = "postcode", code = c("CH430UQ","LS61EF"))
datacode<-"LOACInputData2011"
geography = "LSOA"
code = "E01000945"
geography <- match.arg(geography)
if(geography=="MSOA"){geography="msoaCode"}
if(geography=="LSOA"){geography="lsoaCode"}
if(geography=="postcode"){geography="postCode"}
if(length(code)==1){
url <- paste0("https://api.cdrc.ac.uk/v1/",
datacode,
"/",
geography,
"=",
code)
single_code<-TRUE
}
token<-paste0("Bearer ",Sys.getenv("CDRC_API_KEY"))
call<-httr::GET(url,httr::add_headers(Authorization = token))
if (call$status_code == 500){
message("The token is expired. Login again with CDRC_login() to generate a new one.")
}
if(httr::http_error(call)){
print("error content")
}
data<-httr::content(call,as = "text")
data<-jsonlite::fromJSON(data)
if(single_code==TRUE){
data<-as.data.frame(data[[2]])
}
View(data)
data_list<-list_data()
data_list<-dplyr::filter(data_list, grepl(datacode, DataCode))
geo<-data_list$GeographyLevel
codeList<-paste(data[[c(1)]],sep = "",collapse = "', '")
#clause<-paste0(toupper(colnames(data[1]))," IN ('",noquote(codeList),"')")
if(geo =="LSOA"){
ogpURL<-"https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/Lower_Layer_Super_Output_Areas_December_2011_Boundaries_EW_BFC_V2/FeatureServer/0/query?where="
geocode<-"LSOA11CD"
}
if(geo =="OA"){
ogpURL<-"https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/Output_Areas_December_2011_Boundaries_EW_BGC/FeatureServer/0/query?where="
}
if(geo =="WZ"){
ogpURL<-"https://ons-inspire.esriuk.com/arcgis/rest/services/Census_Boundaries/Workplace_Zone_December_2011_Boundaries/MapServer/0/query?where="
}
clause<-paste0(geocode," IN ('",noquote(codeList),"')")
whereClause<-urltools::url_encode(clause)
if(geo =="OA"){
ogpURL<-"https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/Output_Areas_December_2011_Boundaries_EW_BGC/FeatureServer/0/query?where="
geocode<-"OA11CD"
}
clause<-paste0(geocode," IN ('",noquote(codeList),"')")
whereClause<-urltools::url_encode(clause)
ogpURL<-paste0(ogpURL,whereClause,"&outFields=*&outSR=4326&f=json")
sf <- sf::st_read(ogpURL)
get_data<-function(datacode,geography=c("postcode","MSOA","LSOA"),code,boundaries=FALSE){
geography <- match.arg(geography)
if(geography=="MSOA"){geography="msoaCode"}
if(geography=="LSOA"){geography="lsoaCode"}
if(geography=="postcode"){geography="postCode"}
####add error when data is not in the CDRC catalogue
####check code length
if(length(code)==1){
url <- paste0("https://api.cdrc.ac.uk/v1/",
datacode,
"/",
geography,
"=",
code)
single_code<-TRUE
}
else{
single_code<-FALSE
if(geography=="msoaCode"){
geography<-"msoaCodes"
code=paste0("msoaCodes=",code, sep="", collapse="&")
}
if(geography=="lsoaCode"){
geography<-"lsoaCodes"
code=paste0("lsoaCodes=",code, sep="", collapse="&")
}
if(geography=="postCode"){
geography<-"postCodes"
code=paste0("postCodes=",code, sep="", collapse="&")
}
url<-paste0("https://api.cdrc.ac.uk/v1/",
datacode,
"/",
geography,
"?",
code)
}
token<-paste0("Bearer ",Sys.getenv("CDRC_API_KEY"))
call<-httr::GET(url,httr::add_headers(Authorization = token))
if (call$status_code == 500){
message("The token is expired. Login again with CDRC_login() to generate a new one.")
}
if(httr::http_error(call)){
print("error content")
}
else{
data<-httr::content(call,as = "text")
data<-jsonlite::fromJSON(data)
if(single_code==TRUE){
data<-as.data.frame(data[[2]])
}
else{
data<-as.data.frame(rlist::list.rbind(data[[2]]))
}
}
if(boundaries==TRUE){
data_list<-list_data()
data_list<-dplyr::filter(data_list, grepl(datacode, DataCode))
data<-get_boundaries(data,data_list$GeographyLevel)
}
return(data)
}
get_boundaries<-function(data,geo){
codeList<-paste(data[[c(1)]],sep = "",collapse = "', '")
#clause<-paste0(toupper(colnames(data[1]))," IN ('",noquote(codeList),"')")
if(geo =="LSOA"){
ogpURL<-"https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/Lower_Layer_Super_Output_Areas_December_2011_Boundaries_EW_BFC_V2/FeatureServer/0/query?where="
geocode<-"LSOA11CD"
}
if(geo =="OA"){
ogpURL<-"https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/Output_Areas_December_2011_Boundaries_EW_BGC/FeatureServer/0/query?where="
geocode<-"OA11CD"
}
if(geo =="WZ"){
ogpURL<-"https://ons-inspire.esriuk.com/arcgis/rest/services/Census_Boundaries/Workplace_Zone_December_2011_Boundaries/MapServer/0/query?where="
}
clause<-paste0(geocode," IN ('",noquote(codeList),"')")
whereClause<-urltools::url_encode(clause)
ogpURL<-paste0(ogpURL,whereClause,"&outFields=*&outSR=4326&f=json")
sf <- sf::st_read(ogpURL)
data<-sf::st_as_sf(cbind(data,sf))
return(data)
}
loac<-get_data("LOACInputData2011",geography = "LSOA", code = "E01000945", boundaries = TRUE)
devtools::load_all()
cdrc_login(username = "patu",
password = "Favafava9!")
readRenviron("~/.Renviron")
imd<-get_data("AHAHOverallIndexDomain",geography = "postcode", code = c("CH430UQ","LS61EF","L83UL"), boundaries = TRUE)
loac<-get_data("LOACInputData2011",geography = "LSOA", code = "E01000945", boundaries = TRUE)
oaclass<-get_data("OAClassification2011",geography = "postcode", code = c("CH430UQ","LS61EF"))
plot(sf::st_geometry(loac))
oaclass<-get_data("OAClassification2011",geography = "postcode", code = c("CH430UQ","LS61EF"), boundaries = TRUE)
plot(sf::st_geometry(oaclass))
dataset_list<-list_data()
View(dataset_list)
cdrc_login(username = "patu",
password = "Favafava9!")
readRenviron("~/.Renviron")
dataset_list<-list_data()
View(dataset_list)
ahah<-get_data("AHAHOverallIndexDomain",geography = "postcode", code = c("CH430UQ","LS61EF","L83UL"), boundaries = TRUE)
View(ahah)
library(sf)
lsoa<-st_read("~/Projects/base_layers/lsoa2011.gpkg")
sublsoa<-lsoa[1:15,]
View(sublsoa)
ahah<-get_data("AHAHOverallIndexDomain",geography = "LSOA", code = sublsoa$LSOA11CD, boundaries = TRUE)
View(ahah)
is.character(sublsoa$LSOA11CD)
devtools::load_all()
library(sf)
lsoa<-st_read("~/Projects/base_layers/lsoa2011.gpkg")
sublsoa<-lsoa[1:15,]
cdrc_login(username = "patu",
password = "Favafava9!")
readRenviron("~/.Renviron")
ahah<-get_data("AHAHOverallInd",geography = "postcode", code = c("CH430UQ","LS61EF","L83UL"), boundaries = TRUE)
ahah<-get_data("AHAHOverallIndexDomain",geography = "postcodes", code = c("CH430UQ","LS61EF","L83UL"), boundaries = TRUE)
ahah<-get_data("AHAHOverallIndexDomain",geography = "postcode", code = 2, boundaries = TRUE)
devtools::load_all()
cdrc_login(username = "patu",
password = "Favafava9!")
dataset_list<-list_data()
devtools::document()
?getClassDef
install.packages("tidycensus")
?tidycensus::get_acs()
devtools::load_all()
library(sf)
lsoa<-st_read("~/Projects/base_layers/lsoa2011.gpkg")
sublsoa<-lsoa[1:15,]
cdrc_login(username = "patu",
password = "Favafava9!")
dataset_list<-list_data()
ahah<-get_data("AHAHOverallIndexDomain",geography = "postcode", code = c("CH430UQ","LS61EF","L83UL"), boundaries = TRUE)
ahah<-get_data("AHAHOverallIndexDomain",geography = "postcode", geographyCode = c("CH430UQ","LS61EF","L83UL"), boundaries = TRUE)
View(dataset_list)
(dataCode %in% data_list)
dataCode<-"AHAHOverallIndexDomain"
(dataCode %in% data_list)
data_list<-dataset_list
remove(dataset_list)
(dataCode %in% data_list)
View(data_list)
(dataCode %in% data_list$DataCode)
data_list<-dplyr::filter(data_list, grepl(dataCode, DataCode))
View(data_list)
data_list<-list_data()
grepl(dataCode,data_list$DataCode)
any(grepl(dataCode,data_list$DataCode))
!any(grepl(dataCode,data_list$DataCode))
ahah<-get_data("AHAHOverallIndexDomain",geography = "postcode", geographyCode = c("CH430UQ","LS61EF","L83UL"), boundaries = TRUE)
devtools::load_all()
ahah<-get_data("AHAHOverallIndexDomain",geography = "postcode", geographyCode = c("CH430UQ","LS61EF","L83UL"), boundaries = TRUE)
View(ahah)
class(ahah)
devtools::document()
devtools::document()
devtools::document("~/Projects/CDRC/")
